name: CI
on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }
  workflow_dispatch: {}

jobs:
  build-smoketest-push-deploy:
    runs-on: [self-hosted, linux, x64, local-k8s]
    permissions:
      contents: read
      packages: write
    env:
      OWNER_LOWER: bhishanp

    steps:
      # Clean checkout to avoid stale files
      - uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 0

      - name: Set up Docker Buildx (debug)
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to GHCR (via GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # -------- Build & Smoke Test (local) --------
      - name: Build image (local)
        env:
          BUILDKIT_PROGRESS: plain
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          pull: true
          tags: ghcr.io/${{ env.OWNER_LOWER }}/flask-prom-grafana-devops:ci

      - name: Smoke test container
        run: |
          set -euxo pipefail
          docker run -d --rm -p 8000:8000 --name app ghcr.io/${OWNER_LOWER}/flask-prom-grafana-devops:ci
          docker logs app || true
          docker rm -f app

      # -------- Build & Push to GHCR --------
      - name: Build & push image
        env:
          BUILDKIT_PROGRESS: plain
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          pull: true
          tags: |
            ghcr.io/${{ env.OWNER_LOWER }}/flask-prom-grafana-devops:latest
            ghcr.io/${{ env.OWNER_LOWER }}/flask-prom-grafana-devops:${{ github.sha }}

      # -------- Deploy App to local K8s --------
      - name: Deploy app manifests
        run: |
          set -euxo pipefail
          kubectl apply -v=5 -f k8s/deployment.yaml
          kubectl apply -v=5 -f k8s/ingress.yaml || true
          kubectl apply -v=5 -f k8s/hpa.yaml || true

      - name: Set image to this commit & wait
        run: |
          set -euxo pipefail
          kubectl set image deploy/flask-prom-grafana-devops \
            web=ghcr.io/${{ env.OWNER_LOWER }}/flask-prom-grafana-devops:${{ github.sha }}
          kubectl rollout status deploy/flask-prom-grafana-devops

      # -------- Deploy Prometheus & Grafana (provisioned) --------
      - name: Deploy monitoring (Prometheus & Grafana)
        run: |
          set -euxo pipefail

          # Namespace
          kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -

          # Prometheus config (expects prometheus/prometheus.yml in repo)
          kubectl create configmap prometheus-config -n monitoring \
            --from-file=prometheus/prometheus.yml \
            --dry-run=client -o yaml | kubectl apply -f -

          # Grafana provisioning: create separate CMs for each subdir
          kubectl create configmap grafana-datasources -n monitoring \
            --from-file=grafana/provisioning/datasources \
            --dry-run=client -o yaml | kubectl apply -f -

          kubectl create configmap grafana-dashboard-provider -n monitoring \
            --from-file=grafana/provisioning/dashboards \
            --dry-run=client -o yaml | kubectl apply -f -

          kubectl create configmap grafana-dashboards -n monitoring \
            --from-file=grafana/dashboards \
            --dry-run=client -o yaml | kubectl apply -f -

          # Deployments & Services for monitoring stack
          kubectl apply -f k8s/prometheus_deploy.yml
          kubectl apply -f k8s/grafana_deploy.yml

          # Wait for rollouts
          kubectl -n monitoring rollout status deploy/prometheus
          kubectl -n monitoring rollout status deploy/grafana
