apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-prom-grafana-devops
  labels:
    app: flask-prom-grafana-devops
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-prom-grafana-devops
  template:
    metadata:
      labels:
        app: flask-prom-grafana-devops
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
        - name: web
          image: ghcr.io/bhishanp/flask-prom-grafana-devops:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet: { path: /readyz, port: 8000 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /healthz, port: 8000 }
            initialDelaySeconds: 10
            periodSeconds: 15
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: flask-prom-grafana-devops
spec:
  selector:
    app: flask-prom-grafana-devops
  ports:
    - name: http
      port: 80
      targetPort: 8000
  type: ClusterIP
